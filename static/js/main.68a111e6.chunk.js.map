{"version":3,"sources":["components/Style.styled.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistics.jsx","components/Feedback/Message.jsx","components/Feedback/SectionTitle.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["Container","styled","div","Button","StatisticContainer","StatisticItem","span","FeedbackOptions","options","onLeaveFeedback","objs","Object","keys","map","name","index","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","title","Notification","message","TitleSection","children","option","Feedback","state","props","goodStaticValue","neutralStaticValue","badStaticValue","titleStat","totalStaticValue","positivePercentageStaticValue","countTotalFeedback","evt","console","log","target","dataset","setState","prevState","countPositiveFeedbackPercentage","percent","Math","round","positivePercent","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAYC,IAAOC,IAAV,6DAITC,EAASF,IAAOC,IAAV,8ZAkBNE,EAAqBH,IAAOC,IAAV,iMAUlBG,EAAgBJ,IAAOK,KAAV,iD,OChBXC,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GAEzB,OACE,8BACGE,EAAKG,KAAI,SAACC,EAAMC,GAAP,OACR,cAACZ,EAAD,CAAQa,KAAK,SAASF,KAAMA,EAAkB,cAAaA,EAAMG,QAASR,EAA1E,SACGD,EAAQM,IAD4BC,SCMhCG,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAAoBC,EAAlD,EAAkDA,MAAlD,OACjB,gCACE,mCAAMA,EAAN,OACA,eAACpB,EAAD,WACE,eAACC,EAAD,qBAAuBc,EAAvB,OACA,eAACd,EAAD,wBAA0Be,EAA1B,OACA,eAACf,EAAD,oBAAsBgB,EAAtB,OACA,eAAChB,EAAD,sBAAwBiB,EAAxB,OACA,eAACjB,EAAD,kCAAoCkB,EAApC,cCLSE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mCAAOA,EAAP,QCMWC,EAPM,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACnB,gCACE,6BAAKJ,IACJI,MCGCC,EAAS,CACbV,KAAM,OACNC,QAAS,UACTC,IAAK,OAGDS,E,4MASJC,MAAQ,CACNZ,KAAM,EAAKa,MAAMC,gBACjBb,QAAS,EAAKY,MAAME,mBACpBb,IAAK,EAAKW,MAAMG,eAChBX,MAAO,wBACPY,UAAW,aACXd,MAAO,EAAKU,MAAMK,iBAClBd,mBAAoB,EAAKS,MAAMM,+B,EAGjCC,mBAAqB,SAAAC,GACnBC,QAAQC,IAAIF,GACZ,IAAM1B,EAAO0B,EAAIG,OAAOC,QAAQf,OAChCY,QAAQC,IAAI5B,GACZ,EAAK+B,UAAS,SAAAC,GAAS,gCACpBhC,EAAOgC,EAAUhC,GAAQ,GADL,sBAEdgC,EAAUxB,MAAQ,GAFJ,M,EAMzByB,gCAAkC,WAChC,IAAMC,EAAUC,KAAKC,MAAO,EAAKnB,MAAMZ,KAAO,EAAKY,MAAMT,MAAS,KAClE,MAAM,GAAN,OAAU0B,EAAV,M,4CAGF,WACE,IAAMG,EAAkBC,KAAKL,kCAC7B,OACE,eAAC/C,EAAD,WACE,cAAC,EAAD,CAAcwB,MAAO4B,KAAKrB,MAAMP,MAAhC,SACE,cAAC,EAAD,CAAiBhB,QAASqB,EAAQpB,gBAAiB2C,KAAKb,uBAGzDa,KAAKrB,MAAMT,MACV,cAAC,EAAD,CACEE,MAAO4B,KAAKrB,MAAMK,UAClBjB,KAAMiC,KAAKrB,MAAMZ,KACjBC,QAASgC,KAAKrB,MAAMX,QACpBC,IAAK+B,KAAKrB,MAAMV,IAChBC,MAAO8B,KAAKrB,MAAMT,MAClBC,mBAAoB4B,IAGtB,cAAC,EAAD,CAAczB,QAAQ,6B,GApDT2B,aAAjBvB,EACGwB,aAAe,CACpBrB,gBAAiB,EACjBC,mBAAoB,EACpBC,eAAgB,EAChBE,iBAAkB,EAClBC,8BAA+B,QAqDpBR,QCpEAyB,EAFH,kBAAM,cAAC,EAAD,KCElBC,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,W","file":"static/js/main.68a111e6.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 25px 25px 25px 50px;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: inline-block;\r\n  color: black;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  padding: 5px 30px;\r\n  outline: none;\r\n  border-width: 2px 0;\r\n  border-style: solid none;\r\n  border-color: #fdbe33 #000 #d77206;\r\n  border-radius: 6px;\r\n  background: linear-gradient(#f3ae0f, #e38916) #e38916;\r\n  transition: 0.2s;\r\n  margin-left: 5px;\r\n  margin-top: 25px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StatisticContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  font-weight: 500;\r\n  letter-spacing: 0.06em;\r\n  font-size: 18px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nexport const StatisticItem = styled.span`\r\n  margin-top: 10px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport {Button} from '../Style.styled';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const objs = Object.keys(options);\r\n\r\n  return (\r\n    <div>\r\n      {objs.map((name, index) => (\r\n        <Button type=\"button\" name={name} key={index} data-option={name} onClick={onLeaveFeedback} >\r\n          {options[name]}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport {StatisticContainer, StatisticItem} from 'components/Style.styled'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage, title }) => (\r\n  <div>\r\n    <h2> {title} </h2>\r\n    <StatisticContainer>\r\n      <StatisticItem> Good: {good} </StatisticItem>\r\n      <StatisticItem> Neutral: {neutral} </StatisticItem>\r\n      <StatisticItem> Bad: {bad} </StatisticItem>\r\n      <StatisticItem> Total: {total} </StatisticItem>\r\n      <StatisticItem> Positive feedback: {positivePercentage} </StatisticItem>\r\n    </StatisticContainer>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => (\r\n    <h2> { message } </h2>\r\n);\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst TitleSection = ({ title, children }) => (\r\n  <div>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from 'components/Feedback/FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Message';\r\nimport TitleSection from './SectionTitle';\r\n\r\nimport {Container} from 'components/Style.styled';\r\n\r\nconst option = {\r\n  good: 'Good',\r\n  neutral: 'Neutral',\r\n  bad: 'Bad',\r\n};\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    goodStaticValue: 0,\r\n    neutralStaticValue: 0,\r\n    badStaticValue: 0,\r\n    totalStaticValue: 0,\r\n    positivePercentageStaticValue: '100%',\r\n  };\r\n\r\n  state = {\r\n    good: this.props.goodStaticValue,\r\n    neutral: this.props.neutralStaticValue,\r\n    bad: this.props.badStaticValue,\r\n    title: 'Please leave feedback',\r\n    titleStat: 'Statistics',\r\n    total: this.props.totalStaticValue,\r\n    positivePercentage: this.props.positivePercentageStaticValue,\r\n  };\r\n\r\n  countTotalFeedback = evt => {\r\n    console.log(evt);\r\n    const name = evt.target.dataset.option;\r\n    console.log(name);\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n      total: prevState.total + 1,\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percent = Math.round((this.state.good / this.state.total) * 100);\r\n    return `${percent}%`;\r\n  };\r\n\r\n  render() {\r\n    const positivePercent = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <Container>\r\n        <TitleSection title={this.state.title}>\r\n          <FeedbackOptions options={option} onLeaveFeedback={this.countTotalFeedback} />\r\n        </TitleSection>\r\n\r\n        {this.state.total ? (\r\n          <Statistics\r\n            title={this.state.titleStat}\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.state.total}\r\n            positivePercentage={positivePercent}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport Feedback from 'components/Feedback/Feedback';\r\n\r\nconst App = () => <Feedback />;\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}