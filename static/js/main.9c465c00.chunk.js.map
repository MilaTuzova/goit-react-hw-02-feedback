{"version":3,"sources":["components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistic.jsx","components/Feedback/Message.jsx","components/Feedback/TitleName.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","objs","Object","keys","console","log","map","key","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","title","Notification","message","TitleSection","children","option","table","value","Feedback","state","props","goodValue","neutralValue","badValue","titleStat","totalValue","positivePercentageValue","handleClickFeedback","evt","target","dataset","setState","prevState","this","Statistic","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgBeA,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GAEzB,OADAK,QAAQC,IAAIJ,GAEV,8BACGA,EAAKK,KAAI,SAAAC,GAAG,OACX,wBAAQC,KAAK,SAASC,KAAMF,EAAK,eAAcA,EAAKG,QAASV,EAA7D,SACGD,EAAQQ,WCMJI,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAAoBC,EAAlD,EAAkDA,MAAlD,OACjB,gCACE,mCAAMA,EAAN,OACA,gCACE,2CAAcL,EAAd,OACA,8CAAiBC,EAAjB,OACA,0CAAaC,EAAb,OACA,4CAAeC,EAAf,OACA,wDAA2BC,EAA3B,cCJSE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mCAAOA,EAAP,QCMWC,EAPM,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACnB,gCACE,6BAAKJ,IACJI,MCCCC,EAAS,CACbV,KAAM,OACNC,QAAS,UACTC,IAAK,OAGPV,QAAQmB,MAAMD,EAAOV,KAAKY,O,IAEpBC,E,4MASJC,MAAQ,CACNd,KAAM,EAAKe,MAAMC,UACjBf,QAAS,EAAKc,MAAME,aACpBf,IAAK,EAAKa,MAAMG,SAChBb,MAAO,wBACPc,UAAW,aACXhB,MAAO,EAAKY,MAAMK,WAClBhB,mBAAoB,EAAKW,MAAMM,yB,EAGjCC,oBAAsB,SAAAC,GAEpB,IAAM1B,EAAO0B,EAAIC,OAAOC,QAAQtC,QAChCK,QAAQC,IAAII,GACZ,EAAK6B,UAAS,SAAAC,GAAS,gCACpB9B,EAAO8B,EAAU9B,GAAQ,GADL,sBAEd8B,EAAUxB,MAAQ,GAFJ,M,4CAMzB,WACE,OACE,gCACE,cAAC,EAAD,CAAcE,MAAOuB,KAAKd,MAAMT,MAAhC,SACE,cAAC,EAAD,CAAiBlB,QAASuB,EAAQtB,gBAAiBwC,KAAKN,wBAGzDM,KAAKd,MAAMX,MACV,cAAC0B,EAAD,CACExB,MAAOuB,KAAKd,MAAMK,UAClBnB,KAAM4B,KAAKd,MAAMd,KACjBC,QAAS2B,KAAKd,MAAMb,QACpBC,IAAK0B,KAAKd,MAAMZ,IAChBC,MAAOyB,KAAKd,MAAMX,MAClBC,mBAAoBwB,KAAKd,MAAMV,qBAGjC,cAAC,EAAD,CAAcG,QAAQ,6B,GA9CTuB,aAAjBjB,EACGkB,aAAe,CACpBf,UAAW,EACXC,aAAc,EACdC,SAAU,EACVE,WAAY,EACZC,wBAAyB,IA+CdR,QC9DAmB,EAFH,kBAAM,cAAC,EAAD,KCElBC,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,W","file":"static/js/main.9c465c00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const objs = Object.keys(options);\r\n  console.log(objs);\r\n  return (\r\n    <div>\r\n      {objs.map(key => (\r\n        <button type=\"button\" name={key} data-options={key} onClick={onLeaveFeedback}>\r\n          {options[key]}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage, title }) => (\r\n  <div>\r\n    <h2> {title} </h2>\r\n    <div>\r\n      <span> Good: {good} </span>\r\n      <span> Neutral: {neutral} </span>\r\n      <span> Bad: {bad} </span>\r\n      <span> Total: {total} </span>\r\n      <span> Positive feedback: {positivePercentage} </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => (\r\n    <h2> { message } </h2>\r\n);\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst TitleSection = ({ title, children }) => (\r\n  <div>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from 'components/Feedback/FeedbackOptions';\r\nimport Statistics from './Statistic';\r\nimport Notification from './Message';\r\nimport TitleSection from './TitleName';\r\n\r\nconst option = {\r\n  good: 'Good',\r\n  neutral: 'Neutral',\r\n  bad: 'Bad',\r\n};\r\n\r\nconsole.table(option.good.value);\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    goodValue: 0,\r\n    neutralValue: 0,\r\n    badValue: 0,\r\n    totalValue: 0,\r\n    positivePercentageValue: '',\r\n  };\r\n\r\n  state = {\r\n    good: this.props.goodValue,\r\n    neutral: this.props.neutralValue,\r\n    bad: this.props.badValue,\r\n    title: 'Please leave feedback',\r\n    titleStat: 'Statistics',\r\n    total: this.props.totalValue,\r\n    positivePercentage: this.props.positivePercentageValue,\r\n  };\r\n\r\n  handleClickFeedback = evt => {\r\n    // console.log(evt.target.dataset.options);\r\n    const name = evt.target.dataset.options;\r\n    console.log(name);\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n      total: prevState.total + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TitleSection title={this.state.title}>\r\n          <FeedbackOptions options={option} onLeaveFeedback={this.handleClickFeedback} />\r\n        </TitleSection>\r\n\r\n        {this.state.total ? (\r\n          <Statistics\r\n            title={this.state.titleStat}\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.state.total}\r\n            positivePercentage={this.state.positivePercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport Feedback from 'components/Feedback/Feedback';\r\n\r\nconst App = () => <Feedback />;\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}